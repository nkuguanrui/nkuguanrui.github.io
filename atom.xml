<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://nkuguanrui.github.io</id>
    <title>Guan&apos;s blog</title>
    <updated>2021-01-30T08:50:20.688Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://nkuguanrui.github.io"/>
    <link rel="self" href="https://nkuguanrui.github.io/atom.xml"/>
    <subtitle>Guan&apos;s blog</subtitle>
    <logo>https://nkuguanrui.github.io/images/avatar.png</logo>
    <icon>https://nkuguanrui.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Guan&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[ [原创]python实现期权定价，期权交易策略（持续升级中....ing）]]></title>
        <id>https://nkuguanrui.github.io/post/python-shi-xian-qi-quan-ding-jie-qi-quan-jiao-yi-ce-lue-chi-xu-sheng-ji-zhong-ing/</id>
        <link href="https://nkuguanrui.github.io/post/python-shi-xian-qi-quan-ding-jie-qi-quan-jiao-yi-ce-lue-chi-xu-sheng-ji-zhong-ing/">
        </link>
        <updated>2021-01-30T08:44:24.000Z</updated>
        <content type="html"><![CDATA[<p>本系列文章致力于用python实现与期权定价，期权交易策略，波动率交易策略等代码。<br>
项目地址：<a href="https://github.com/nkuguanrui/optionpricing">python期权</a></p>
<h1 id="期权定价">期权定价</h1>
<pre><code>    import BSmodel as bs
    s,k,r,t,v,cp = 10,10,0.03,30/365,1
    &quot;&quot;&quot;
    s:标的价格
    k:行权价格
    r:无风险利率
    t:剩余期限
    v:波动率
    cp:1为call ，-1为put
    &quot;&quot;&quot;
    p1 = bs.caculateBSM(s,k,r,t,v,cp)
</code></pre>
<h1 id="隐含波动率">隐含波动率</h1>
<pre><code>    import BSmodel as bs
    s,k,r,t,v,cp = 10,10,0.03,30/365,1
    price = 1
    &quot;&quot;&quot;
    price:期权市场价格
    s:标的价格
    k:行权价格
    r:无风险利率
    t:剩余期限
    cp:1为call ，-1为put
    &quot;&quot;&quot;
    IV1 = bs.caculateIV_Newton(price,s,k,r,t,cp)# 牛顿法
    IV2 = bs.caculateIV_Dichotomy(price,s,k,r,t,cp) #二分法
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[论文复现]Tayal(2020)]]></title>
        <id>https://nkuguanrui.github.io/post/lun-wen-fu-xian-tayal2020/</id>
        <link href="https://nkuguanrui.github.io/post/lun-wen-fu-xian-tayal2020/">
        </link>
        <updated>2021-01-26T12:37:59.000Z</updated>
        <content type="html"><![CDATA[<h1 id="论文整体思路">论文整体思路</h1>
<ul>
<li>马科维茨的均值-方差(MV)模型通过分散投资，计算给定目标收益率下的期望风险实现了金融资产的最优化配置。然而，由于维数诅咒和高交易成本，使得大量资产同时利用均值-方差(MV)模型进行最优化配置几乎不可能。</li>
<li>在模型中加入基数约束可以解决上述问题，但是带有基数约束的MV模型是NP完全问题，计算复杂度很大。一种解决办法是在求解模型前减小资产的数量，获得资产子集，从而解决基数约束问题。</li>
<li>聚类可以生成代表性子集，在进行MV最优化前主动减少资产的规模，从而加速模型求解速度。</li>
</ul>
<h1 id="均值方差模型">均值方差模型</h1>
<ol>
<li>带有数量约束的MV最优化模型如图所示：<br>
<img src="https://nkuguanrui.github.io/post-images/1611664727726.png" alt="" loading="lazy"></li>
<li>带有基数约束的MV最优化模型是在上述最优化模型基础上加入<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><msub><mi>z</mi><mi>i</mi></msub><mo>≤</mo><mi>K</mi><mo>(</mo><msub><mi>z</mi><mi>i</mi></msub><mo>∈</mo><mo>{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo>}</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">\sum_{i=0}^{n}{z_i} \leq K  (z_i \in \{0,1\})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mclose">)</span></span></span></span><br>
其中K是资产组合中最大资产数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">z_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>等于1表示投资组合中存在该资产，等于0表示不存在。<br>
具有基数约束的MV模型可以使用基于元启发式的技术如模拟退火、遗传算法、禁忌搜索、人工蜂群算法、粒子群优化或其他启发式方法如神经网络来求解。</li>
</ol>
<h1 id="聚类mv模型">聚类MV模型</h1>
<p>聚类可以生成代表性子集，从而构建最优化投资组合，聚类与MV模型集成模型可以由如下几个步骤实现。</p>
<ol>
<li>确定最优簇数K。其目的是找到可以代表整个资产全集的子集，以便减少其维数<br>
<img src="https://nkuguanrui.github.io/post-images/1611664733894.png" alt="" loading="lazy"></li>
<li>寻找代表性子集。其目的是以每个集群中指定一个具有代表性的资产<br>
<img src="https://nkuguanrui.github.io/post-images/1611664738644.png" alt="" loading="lazy"></li>
<li>求解MV模型</li>
</ol>
<h1 id="滚动回测">滚动回测</h1>
<ol start="4">
<li>计算样本外OOS收益率</li>
</ol>
<h1 id=""></h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[原创]马科维茨均值方差模型]]></title>
        <id>https://nkuguanrui.github.io/post/yuan-chuang-ma-ke-wei-ci-jun-zhi-fang-chai-mo-xing/</id>
        <link href="https://nkuguanrui.github.io/post/yuan-chuang-ma-ke-wei-ci-jun-zhi-fang-chai-mo-xing/">
        </link>
        <updated>2021-01-24T04:37:26.000Z</updated>
        <content type="html"><![CDATA[<h2 id="均值方差模型">均值方差模型</h2>
<p>马科维茨在《portfolio selection》（1952）提出均值方差模型，在给定期望收益下风险最小，或者给定风险下期望收益最大，其本质是数学中最优化问题。</p>
<p>实际操作中，利用N个资产的历史数据计算投资组合的收益和波动率，求解最优化问题做出有效前沿，其中夏普比率最大的组合是市场组合。</p>
<h2 id="本文贡献">本文贡献</h2>
<p>均值方差模型理论上会得到抛物线形状的散点图。但是在实际操作中，当资产数量N（5左右）不大时候，利用随机初始化权重方法可以画出较好的抛物线，但是当资产数量N太大时候（大于10）就很难通过随机初始化权重方法画出抛物线形状的散点图。</p>
<p>本项目利用A股历史数据，利用python实现均值方差模型画出有效前沿和CML（资本市场线），并且解决资产数量过大无法画出抛物线散点图的情况。</p>
<p>项目为<a href="https://github.com/nkuguanrui/mean_variance_model">马科维茨均值方差模型</a>，地址：<a href="https://github.com/nkuguanrui/mean_variance_model">https://github.com/nkuguanrui/mean_variance_model</a></p>
<h2 id="python库">python库</h2>
<ul>
<li>numpy</li>
<li>matplotlib</li>
<li>scipy</li>
<li>itertools</li>
</ul>
<h2 id="数据来源">数据来源</h2>
<ul>
<li>wind</li>
</ul>
<h2 id="代码和数据">代码和数据</h2>
<ul>
<li>详见主页</li>
<li>项目为<a href="https://github.com/nkuguanrui/mean_variance_model">马科维茨均值方差模型</a>，地址：<a href="https://github.com/nkuguanrui/mean_variance_model">https://github.com/nkuguanrui/mean_variance_model</a></li>
</ul>
<h2 id="结果展示">结果展示</h2>
<figure data-type="image" tabindex="1"><img src="https://nkuguanrui.github.io/post-images/1611463202152.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ [研报复现]基于随机森林的多因子选股模型]]></title>
        <id>https://nkuguanrui.github.io/post/ji-yu-sui-ji-sen-lin-de-duo-yin-zi-xuan-gu-mo-xing/</id>
        <link href="https://nkuguanrui.github.io/post/ji-yu-sui-ji-sen-lin-de-duo-yin-zi-xuan-gu-mo-xing/">
        </link>
        <updated>2020-12-08T01:40:18.000Z</updated>
        <content type="html"><![CDATA[<p>本项目参考了华泰证券研报《人工智能选股之随机森林模型》，项目绝大内容与研报类似，项目地址为：<a href="https://github.com/nkuguanrui/portfolio_select_with_random_forest">人工智能选股之随机森林模型</a>，网址为：<a href="https://github.com/nkuguanrui/portfolio_select_with_random_forest">https://github.com/nkuguanrui/portfolio_select_with_random_forest</a>。</p>
<h2 id="随机森林">随机森林</h2>
<p>随机森林利用了Bagging思想，集合多个决策树的决策，最终达到“三个臭皮匠顶个诸葛亮”效果，如图1。有关随机森林具体做法可以参考研报和相关书籍。<br>
<img src="https://nkuguanrui.github.io/post-images/1611411277247.png" alt="" loading="lazy"></p>
<h2 id="因子选择">因子选择</h2>
<p>选择A股市场中表现较好的因子，如表1</p>
<p>表1：因子</p>
<table>
<thead>
<tr>
<th style="text-align:center">大类因子</th>
<th style="text-align:center">具体因子</th>
<th>因子描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">价值</td>
<td style="text-align:center">pe_ttm</td>
<td>市盈率，股票的价格和每股收益的比率</td>
</tr>
<tr>
<td style="text-align:center">价值</td>
<td style="text-align:center">pb_ttm</td>
<td>市净率，每股股价与每股净资产的比率</td>
</tr>
<tr>
<td style="text-align:center">价值</td>
<td style="text-align:center">ps_ttm</td>
<td>市销率，总市值与主营业务收入的比率</td>
</tr>
<tr>
<td style="text-align:center">价值</td>
<td style="text-align:center">pcf_ttm</td>
<td>市现率，股票价格与每股现金流量的比率</td>
</tr>
<tr>
<td style="text-align:center">价值</td>
<td style="text-align:center">dividendyield</td>
<td>股息率，一年的总派息额与当时市价的比例</td>
</tr>
<tr>
<td style="text-align:center">价值</td>
<td style="text-align:center">g_pe</td>
<td>净利润（TTM）同比增长率/PE_TTM</td>
</tr>
<tr>
<td style="text-align:center">成长</td>
<td style="text-align:center">sales_g</td>
<td>营业收入（TTM）同比增长率</td>
</tr>
<tr>
<td style="text-align:center">成长</td>
<td style="text-align:center">sales_g_3y</td>
<td>营业收入三年复合增长率</td>
</tr>
<tr>
<td style="text-align:center">成长</td>
<td style="text-align:center">profit_g</td>
<td>净利润（TTM）同比增长率</td>
</tr>
<tr>
<td style="text-align:center">成长</td>
<td style="text-align:center">profit_g_3y</td>
<td>净利润三年复合增长率</td>
</tr>
<tr>
<td style="text-align:center">成长</td>
<td style="text-align:center">ocf_g</td>
<td>经营性现金流（TTM）同比增长率</td>
</tr>
<tr>
<td style="text-align:center">成长</td>
<td style="text-align:center">roe_g</td>
<td>ROE（TTM）同比增长率</td>
</tr>
<tr>
<td style="text-align:center">市值</td>
<td style="text-align:center">ln_capital</td>
<td>总市值取对数</td>
</tr>
<tr>
<td style="text-align:center">动量反转</td>
<td style="text-align:center">return_Nm</td>
<td>个股最近N个月收益率，N=1,3,6,12</td>
</tr>
<tr>
<td style="text-align:center">动量反转</td>
<td style="text-align:center">wgt_return_Nm</td>
<td>个股最近N个月内用每日换手率乘以每日收益率求算术平均值N=1,3,6,12</td>
</tr>
<tr>
<td style="text-align:center">动量反转</td>
<td style="text-align:center">exp_wgt_return_Nm</td>
<td>个股最近N个月内用每日换手率乘以函数exp(-x_i/N/4)再乘以每日收益率求算术平均值，x_i为该日距离截面日的交易日的数,N=1,3,6,12</td>
</tr>
<tr>
<td style="text-align:center">波动率</td>
<td style="text-align:center">std_ff3factor_Nm</td>
<td>特质波动率——个股最近N个月内用日频收益率对FF三因子模型回归的残差的标准差，N=1,3,6,12</td>
</tr>
<tr>
<td style="text-align:center">波动率</td>
<td style="text-align:center">std_Nm</td>
<td>个股最近N个月的日收益率序列标准差，N=1,3,6,12</td>
</tr>
<tr>
<td style="text-align:center">股价</td>
<td style="text-align:center">ln_price</td>
<td>股价取对数</td>
</tr>
<tr>
<td style="text-align:center">情绪</td>
<td style="text-align:center">rating_average</td>
<td>wind评级的平均值</td>
</tr>
<tr>
<td style="text-align:center">情绪</td>
<td style="text-align:center">rating_targetprice</td>
<td>wind一致目标价/现价-1</td>
</tr>
<tr>
<td style="text-align:center">股东</td>
<td style="text-align:center">holder_avgpctchange</td>
<td>户均持股比例的同比增长率</td>
</tr>
<tr>
<td style="text-align:center">技术</td>
<td style="text-align:center">MACD</td>
<td>经典技术指标，长周期取30日，短周期取10日，计算DEA均线的周期（中周期）取15日</td>
</tr>
<tr>
<td style="text-align:center">技术</td>
<td style="text-align:center">DEA</td>
<td>经典技术指标，长周期取30日，短周期取10日，计算DEA均线的周期（中周期）取15日</td>
</tr>
<tr>
<td style="text-align:center">技术</td>
<td style="text-align:center">DIF</td>
<td>经典技术指标，长周期取30日，短周期取10日，计算DEA均线的周期（中周期）取15日</td>
</tr>
<tr>
<td style="text-align:center">财务质量因子</td>
<td style="text-align:center">roe_ttm</td>
<td>净资产收益率</td>
</tr>
<tr>
<td style="text-align:center">财务质量因子</td>
<td style="text-align:center">eps_ttm</td>
<td>每股收益</td>
</tr>
<tr>
<td style="text-align:center">财务质量因子</td>
<td style="text-align:center">ebit_ttm</td>
<td>税前利润率，税前利润比当期的销售收入</td>
</tr>
<tr>
<td style="text-align:center">杠杆</td>
<td style="text-align:center">currentratio</td>
<td>流动比率，流动负债/流动资产</td>
</tr>
<tr>
<td style="text-align:center">杠杆</td>
<td style="text-align:center">debtequityratio</td>
<td>非流动负债/净资产</td>
</tr>
<tr>
<td style="text-align:center">换手率</td>
<td style="text-align:center">bias_turn_Nm</td>
<td>个股最近N个月内日均换手率除以最近2年内日均换手率（剔除停牌、涨跌停的交易日）再减去1，N=1,3,6,12</td>
</tr>
</tbody>
</table>
<h1 id="模型构建">模型构建</h1>
<h2 id="数据处理">数据处理</h2>
<ol>
<li>数据获取
<ul>
<li>股票池：沪深300动态股票池月度数据。</li>
</ul>
<ul>
<li>回测区间：2010-01-01到2020-06-01</li>
<li>换仓期：在每个自然月最后一个交易日核算因子值，在下个自然月首个交易日按当日收盘价换仓。</li>
<li>数据来源：wind+聚宽</li>
</ul>
</li>
<li>数据预处理
<ul>
<li>缺失值：拉格朗日插值法</li>
<li>极端值：MAD中位数去极值</li>
<li>标准化：最大最小标准化</li>
</ul>
</li>
<li>特征与标签
<ul>
<li>特征：表1中50个因子</li>
<li>标签：在每个月末截面期，选取下月收益排名前 30%的股票作为正例（y = 1） ，后 30%的<br>
股票作为负例（y = 0）</li>
</ul>
</li>
</ol>
<h2 id="单测试集回测">单测试集回测</h2>
<ol>
<li>训练集测试集划分
<ul>
<li>训练集区间：2010-01-01到2016-12-31</li>
<li>测试集区间：2017-01-01到2020-05-01</li>
</ul>
</li>
<li>训练集参数寻优
<ul>
<li>KFold交叉验证</li>
<li>超参数：n_estimators;max_features;min_samples_leaf;min_samples_split</li>
</ul>
</li>
<li>测试集回测
<ul>
<li>长时间跨度测试集回测</li>
<li>模型参数固定，可能会失效</li>
</ul>
</li>
</ol>
<h2 id="回测指标">回测指标</h2>
<ul>
<li>年化收益率</li>
<li>年化波动率</li>
<li>夏普比率</li>
<li>最大回撤</li>
<li>IR信息比率</li>
<li>超额收益</li>
<li>净值</li>
</ul>
<h2 id="滚动分层回测多测试集回测">滚动分层回测（多测试集回测）</h2>
<ol>
<li>行业中性策略<br>
将随机森林预测值是为单因子，分别从各个行业中选出预测值排名靠前的N只股票等权配置。</li>
<li>等权重策略<br>
将随机森林预测值是为单因子，直接从股票池中选取预测值排名靠前的N只股票等权配置。</li>
</ol>
<h2 id="实证研究">实证研究</h2>
<p>分别进行滚动行业中性策略，滚动等权重策略，行业中性单测试集策略，等权重单测试集策略。</p>
<ol>
<li>滚动等权重策略
<ul>
<li>滚动窗口长度t：12，18，24</li>
<li>股票池N：10，20，50</li>
<li>回测区间：2017-2020</li>
<li>手续费：0.15%</li>
</ul>
</li>
<li>滚动行业中性策略
<ul>
<li>滚动窗口长度t：12，18，24</li>
<li>单行业股票池N：2，5，10</li>
<li>回测区间：2017-2020</li>
<li>手续费：0.15%</li>
</ul>
</li>
<li>等权重单测试集策略
<ul>
<li>股票池N：10，20，50</li>
<li>回测区间：2017-2020</li>
<li>手续费：0.15%</li>
</ul>
</li>
<li>行业中性单测试集策略
<ul>
<li>单行业股票池N：2，5，10</li>
<li>回测区间：2017-2020</li>
<li>手续费：0.15%</li>
</ul>
</li>
</ol>
<h2 id="实证结论">实证结论</h2>
<p>等权重策略随机森林选股策略可以获得稳定的超额收益，行业中性策略效果不明显，下面展示滚动等权重策略（t:12;N:10)，单测试集等权重策略（N:10)和HS300指数的净值走势，如图2。注：策略手续费0.15%，指数手续费0%。<br>
<img src="https://nkuguanrui.github.io/post-images/1611411294127.png" alt="" loading="lazy"></p>
<h2 id="代码和数据">代码和数据</h2>
<p>项目地址为：<a href="https://github.com/nkuguanrui/portfolio_select_with_random_forest">人工智能选股之随机森林模型</a>，网址为：<a href="https://github.com/nkuguanrui/portfolio_select_with_random_forest">https://github.com/nkuguanrui/portfolio_select_with_random_forest</a><br>
<strong>未经授权不得转载或转载请注明出处</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ [原创]中国波指（000188）编制（python）]]></title>
        <id>https://nkuguanrui.github.io/post/zhong-guo-bo-zhi-000188bian-zhi-python/</id>
        <link href="https://nkuguanrui.github.io/post/zhong-guo-bo-zhi-000188bian-zhi-python/">
        </link>
        <updated>2020-08-11T13:36:37.000Z</updated>
        <content type="html"><![CDATA[<p>中国波指编制；中国波动率指数；复现中国波指000188；python；</p>
<h1 id="中国波指介绍">中国波指介绍</h1>
<p>上证 50 ETF 波动率指数是基于上海证券交易所挂牌的 50 ETF 期权合约编制而成，反映投资者对未来 30 天 50 ETF 波动率的预期。上证 50 ETF 波动率指数不仅是反映投资者情绪的重要指标，也是衍生产品的重要标的，可作为投资者管控风险的有力工具。由于种种原因，中国波指在2018年停止发布本。项目目的是严格按照官方发布的指数编制方法重新复现波动率指数，数据和代码详见项目主页<a href="https://github.com/nkuguanrui/ivx">中国波指python编制</a>，网址：<a href="https://github.com/nkuguanrui/ivx">https://github.com/nkuguanrui/ivx</a>。</p>
<ul>
<li>指数名称：上证 50 ETF 波动率指数</li>
<li>指数简称：中国波指</li>
<li>英文名称：SSE 50 ETF Volatility Index</li>
<li>英文简称：iVX</li>
<li>指数代码：000188</li>
</ul>
<h2 id="计算方法">计算方法</h2>
<p>上证 50 ETF 波动率指数是基于方差互换原理，采用上证 50 ETF 期权相关数据计算而得。具体计算方法参考中证指数有限公司分布的《上证50ETF波动率指数编制方案》。</p>
<h2 id="指数复现">指数复现</h2>
<p>由于种种原因，中国波指在2018年官方停止发布，本项目利用python和期权数据，严格按照中国波指官方编制方案，对中国波指进行复制，目的是为了可以获得最新的中国波指数据，方面投资者进行风险管控。</p>
<h3 id="数据来源">数据来源</h3>
<p>wind数据库，上证50ETF期权日度数据</p>
<h3 id="方法">方法</h3>
<p>python+《上证50ETF波动率指数编制方案》</p>
<h3 id="结论">结论</h3>
<p>复现的波动率指数和中国波指相似度高达98.3%，达到实践可用水平,如图。<br>
<img src="https://nkuguanrui.github.io/post-images/1611409293578.png" alt="" loading="lazy"></p>
<h1 id="数据和代码">数据和代码</h1>
<p>数据和代码详见项目主页<a href="https://github.com/nkuguanrui/ivx">中国波指python编制</a>,网址：<a href="https://github.com/nkuguanrui/ivx">https://github.com/nkuguanrui/ivx</a>。<br>
<strong>未经授权不得转载或转载请注明出处</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[文献复现]Fama-French(1992)]]></title>
        <id>https://nkuguanrui.github.io/post/xue-zhu-wen-xian-fu-xian-fama-french(1992)/</id>
        <link href="https://nkuguanrui.github.io/post/xue-zhu-wen-xian-fu-xian-fama-french(1992)/">
        </link>
        <updated>2020-06-23T12:45:51.000Z</updated>
        <content type="html"><![CDATA[<h1 id="项目目的">项目目的</h1>
<p>本项目利用美国股票月度历史数据，利用python严格按照FamaFrench(1992)中的方法构造三因子（市场因子，HML因子，SMB因子），并且按照论文中所用的方法对模型进行时间序列回归检验。在文章写作过程中，本文会把重要的细节的附上原文。详见项目<a href="https://github.com/nkuguanrui/FamaFrenchThreeFacorModel">FamaFrench3Factors</a>，项目地址为：<a href="https://github.com/nkuguanrui/FamaFrenchThreeFacorModel">https://github.com/nkuguanrui/FamaFrenchThreeFacorModel</a></p>
<h1 id="三因子构建">三因子构建</h1>
<h2 id="数据来源">数据来源</h2>
<ul>
<li>wrds数据库</li>
<li>CRSP</li>
<li>COMPUSTAT</li>
</ul>
<h2 id="数据处理">数据处理</h2>
<ul>
<li>删除金融公司(We exclude financial firms because the high leverage that is normal for these firms probably does not have the same meaning as for nonfinancial firms, where high leverage more likely indicates distress.)</li>
<li>为了确保财报发布，将t-1年的财务信息与t年7月到t+1年6月的收益率进行匹配,也就是说，将上市公司年报发布时间统一设定在下一年的6月。(To ensure that the accounting variables are known before the returns they are used to explain, we match the accounting data for all fiscal yearends in calendar year t - 1 (1962-1989) with the returns for July of year t to June of t + 1.)</li>
</ul>
<h2 id="因子构建">因子构建</h2>
<ol>
<li>t年的6月，以纽交所股票截面数据，计算市值的50%分位点和BM(book-to-markert ratio)的30%和70%分位点。
<ul>
<li>计算BM分位点史去掉BM小于0的股票(We do not use negative-BE firms, when calculating the breakpoints for BM or when forming the size-BM portfolios.)</li>
<li>市值(size)选择t年6月的数据;BM是用t-1年财年末的账面价值除以t-1年末的市值</li>
</ul>
</li>
<li>对纽交所，纳斯达克，美交所股票做2x3独立双重排序(independent double sorting),分成6组，计算每组t年7月到t+1年6月的月度市值加权收益率。t+1年6月重新构造2x3组合。</li>
<li>构建HML和SMB因子:
<ul>
<li>$SMB = (SH+SM+SL)/3 - (BH+BM+BL)/3 $</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>M</mi><mi>L</mi><mo>=</mo><mo>(</mo><mi>S</mi><mi>H</mi><mo>+</mo><mi>B</mi><mi>H</mi><mo>)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><mo>(</mo><mi>S</mi><mi>L</mi><mo>+</mo><mi>B</mi><mi>L</mi><mo>)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">HML= (SH+BH)/2 - (SL+BL)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">L</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></li>
</ul>
</li>
<li>市场因子：RM-RF
<ul>
<li>RM：全部股票月度市值加权收益率</li>
<li>RF：一个月国债收益率</li>
</ul>
</li>
</ol>
<h2 id="因子检验">因子检验</h2>
<p>FamaFrench(1992)利用时间序列回归，估计定价误差，对三因子模型进行检验。</p>
<ol>
<li>构造25个投资组合，构造方法和因子构建中的方法一致，唯一的差别是做5x5独立双重排序。</li>
<li>计算25个组合的月度加权收益率，计算超额收益</li>
<li>以25个组合的超额收益为因变量，以三因子为自变量，进行时间序列回归，股票定价误差和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span></li>
<li>对定价误差进行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>检验，如果定价误差不显著不等于0，则多因子模型有效</li>
<li>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>进行检验，发现<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>显著不等于0，说明因子对25个投资组合的超额收益率有显著的解释能力。</li>
</ol>
<h2 id="数据和代码">数据和代码</h2>
<p>详见项目<a href="https://github.com/nkuguanrui/FamaFrenchThreeFacorModel">FamaFrench3Factors</a>，项目地址为：<a href="https://github.com/nkuguanrui/FamaFrenchThreeFacorModel">https://github.com/nkuguanrui/FamaFrenchThreeFacorModel</a></p>
]]></content>
    </entry>
</feed>