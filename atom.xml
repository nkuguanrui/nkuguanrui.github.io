<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://nkuguanrui.github.io</id>
    <title>Guan&apos;s blog</title>
    <updated>2021-01-31T06:37:09.692Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://nkuguanrui.github.io"/>
    <link rel="self" href="https://nkuguanrui.github.io/atom.xml"/>
    <subtitle>Guan&apos;s blog</subtitle>
    <logo>https://nkuguanrui.github.io/images/avatar.png</logo>
    <icon>https://nkuguanrui.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Guan&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[ [原创]python实现期权定价，期权交易策略（持续升级中....ing）]]></title>
        <id>https://nkuguanrui.github.io/post/python-shi-xian-qi-quan-ding-jie-qi-quan-jiao-yi-ce-lue-chi-xu-sheng-ji-zhong-ing/</id>
        <link href="https://nkuguanrui.github.io/post/python-shi-xian-qi-quan-ding-jie-qi-quan-jiao-yi-ce-lue-chi-xu-sheng-ji-zhong-ing/">
        </link>
        <updated>2021-01-30T08:44:24.000Z</updated>
        <content type="html"><![CDATA[<p>本系列文章致力于用python实现与期权定价，期权交易策略，波动率交易策略等代码。<br>
项目地址：<a href="https://github.com/nkuguanrui/optionpricing">python期权</a></p>
<h1 id="期权定价">期权定价</h1>
<pre><code>    import BSmodel as bs
    s,k,r,t,v,cp = 10,10,0.03,30/365,1
    &quot;&quot;&quot;
    s:标的价格
    k:行权价格
    r:无风险利率
    t:剩余期限
    v:波动率
    cp:1为call ，-1为put
    &quot;&quot;&quot;
    p1 = bs.caculateBSM(s,k,r,t,v,cp)
</code></pre>
<h1 id="隐含波动率">隐含波动率</h1>
<pre><code>    import BSmodel as bs
    s,k,r,t,v,cp = 10,10,0.03,30/365,1
    price = 1
    &quot;&quot;&quot;
    price:期权市场价格
    s:标的价格
    k:行权价格
    r:无风险利率
    t:剩余期限
    cp:1为call ，-1为put
    &quot;&quot;&quot;
    IV1 = bs.caculateIV_Newton(price,s,k,r,t,cp)# 牛顿法
    IV2 = bs.caculateIV_Dichotomy(price,s,k,r,t,cp) #二分法
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[论文复现]Tayal(2020)]]></title>
        <id>https://nkuguanrui.github.io/post/lun-wen-fu-xian-tayal2020/</id>
        <link href="https://nkuguanrui.github.io/post/lun-wen-fu-xian-tayal2020/">
        </link>
        <updated>2021-01-26T12:37:59.000Z</updated>
        <content type="html"><![CDATA[<h1 id="论文整体思路">论文整体思路</h1>
<ul>
<li>马科维茨的均值-方差(MV)模型通过分散投资，计算给定目标收益率下的期望风险实现了金融资产的最优化配置。然而，由于维数诅咒和高交易成本，使得大量资产同时利用均值-方差(MV)模型进行最优化配置几乎不可能。</li>
<li>在模型中加入基数约束可以解决上述问题，但是带有基数约束的MV模型是NP完全问题，计算复杂度很大。一种解决办法是在求解模型前减小资产的数量，获得资产子集，从而解决基数约束问题。</li>
<li>聚类可以生成代表性子集，在进行MV最优化前主动减少资产的规模，从而加速模型求解速度。</li>
</ul>
<h1 id="均值方差模型">均值方差模型</h1>
<ol>
<li>带有数量约束的MV最优化模型如图所示：<br>
<img src="https://nkuguanrui.github.io/post-images/1611664727726.png" alt="" loading="lazy"></li>
<li>带有基数约束的MV最优化模型是在上述最优化模型基础上加入<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><msub><mi>z</mi><mi>i</mi></msub><mo>≤</mo><mi>K</mi><mo>(</mo><msub><mi>z</mi><mi>i</mi></msub><mo>∈</mo><mo>{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo>}</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">\sum_{i=0}^{n}{z_i} \leq K  (z_i \in \{0,1\})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mclose">)</span></span></span></span><br>
其中K是资产组合中最大资产数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">z_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>等于1表示投资组合中存在该资产，等于0表示不存在。<br>
具有基数约束的MV模型可以使用基于元启发式的技术如模拟退火、遗传算法、禁忌搜索、人工蜂群算法、粒子群优化或其他启发式方法如神经网络来求解。</li>
</ol>
<h1 id="聚类mv模型">聚类MV模型</h1>
<p>聚类可以生成代表性子集，从而构建最优化投资组合，聚类与MV模型集成模型可以由如下几个步骤实现。</p>
<ol>
<li>确定最优簇数K。其目的是找到可以代表整个资产全集的子集，以便减少其维数<br>
<img src="https://nkuguanrui.github.io/post-images/1611664733894.png" alt="" loading="lazy"></li>
<li>寻找代表性子集。其目的是以每个集群中指定一个具有代表性的资产<br>
<img src="https://nkuguanrui.github.io/post-images/1611664738644.png" alt="" loading="lazy"></li>
<li>求解MV模型</li>
</ol>
<h1 id="滚动回测">滚动回测</h1>
<ol start="4">
<li>计算样本外OOS收益率</li>
</ol>
<h1 id=""></h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[原创]马科维茨均值方差模型]]></title>
        <id>https://nkuguanrui.github.io/post/yuan-chuang-ma-ke-wei-ci-jun-zhi-fang-chai-mo-xing/</id>
        <link href="https://nkuguanrui.github.io/post/yuan-chuang-ma-ke-wei-ci-jun-zhi-fang-chai-mo-xing/">
        </link>
        <updated>2021-01-24T04:37:26.000Z</updated>
        <content type="html"><![CDATA[<h2 id="均值方差模型">均值方差模型</h2>
<p>马科维茨在《portfolio selection》（1952）提出均值方差模型，在给定期望收益下风险最小，或者给定风险下期望收益最大，其本质是数学中最优化问题。</p>
<p>实际操作中，利用N个资产的历史数据计算投资组合的收益和波动率，求解最优化问题做出有效前沿，其中夏普比率最大的组合是市场组合。</p>
<h2 id="本文贡献">本文贡献</h2>
<p>均值方差模型理论上会得到抛物线形状的散点图。但是在实际操作中，当资产数量N（5左右）不大时候，利用随机初始化权重方法可以画出较好的抛物线，但是当资产数量N太大时候（大于10）就很难通过随机初始化权重方法画出抛物线形状的散点图。</p>
<p>本项目利用A股历史数据，利用python实现均值方差模型画出有效前沿和CML（资本市场线），并且解决资产数量过大无法画出抛物线散点图的情况。</p>
<p>项目为<a href="https://github.com/nkuguanrui/mean_variance_model">马科维茨均值方差模型</a>，地址：<a href="https://github.com/nkuguanrui/mean_variance_model">https://github.com/nkuguanrui/mean_variance_model</a></p>
<h2 id="python库">python库</h2>
<ul>
<li>numpy</li>
<li>matplotlib</li>
<li>scipy</li>
<li>itertools</li>
</ul>
<h2 id="数据来源">数据来源</h2>
<ul>
<li>wind</li>
</ul>
<h2 id="代码和数据">代码和数据</h2>
<ul>
<li>详见主页</li>
<li>项目为<a href="https://github.com/nkuguanrui/mean_variance_model">马科维茨均值方差模型</a>，地址：<a href="https://github.com/nkuguanrui/mean_variance_model">https://github.com/nkuguanrui/mean_variance_model</a></li>
</ul>
<h2 id="结果展示">结果展示</h2>
<figure data-type="image" tabindex="1"><img src="https://nkuguanrui.github.io/post-images/1611463202152.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ [原创]中国波指（000188）编制（python）]]></title>
        <id>https://nkuguanrui.github.io/post/zhong-guo-bo-zhi-000188bian-zhi-python/</id>
        <link href="https://nkuguanrui.github.io/post/zhong-guo-bo-zhi-000188bian-zhi-python/">
        </link>
        <updated>2020-08-11T13:36:37.000Z</updated>
        <content type="html"><![CDATA[<p>中国波指编制；中国波动率指数；复现中国波指000188；python；</p>
<h1 id="中国波指介绍">中国波指介绍</h1>
<p>上证 50 ETF 波动率指数是基于上海证券交易所挂牌的 50 ETF 期权合约编制而成，反映投资者对未来 30 天 50 ETF 波动率的预期。上证 50 ETF 波动率指数不仅是反映投资者情绪的重要指标，也是衍生产品的重要标的，可作为投资者管控风险的有力工具。由于种种原因，中国波指在2018年停止发布本。项目目的是严格按照官方发布的指数编制方法重新复现波动率指数，数据和代码详见项目主页<a href="https://github.com/nkuguanrui/ivx">中国波指python编制</a>，网址：<a href="https://github.com/nkuguanrui/ivx">https://github.com/nkuguanrui/ivx</a>。</p>
<ul>
<li>指数名称：上证 50 ETF 波动率指数</li>
<li>指数简称：中国波指</li>
<li>英文名称：SSE 50 ETF Volatility Index</li>
<li>英文简称：iVX</li>
<li>指数代码：000188</li>
</ul>
<h2 id="计算方法">计算方法</h2>
<p>上证 50 ETF 波动率指数是基于方差互换原理，采用上证 50 ETF 期权相关数据计算而得。具体计算方法参考中证指数有限公司分布的《上证50ETF波动率指数编制方案》。</p>
<h2 id="指数复现">指数复现</h2>
<p>由于种种原因，中国波指在2018年官方停止发布，本项目利用python和期权数据，严格按照中国波指官方编制方案，对中国波指进行复制，目的是为了可以获得最新的中国波指数据，方面投资者进行风险管控。</p>
<h3 id="数据来源">数据来源</h3>
<p>wind数据库，上证50ETF期权日度数据</p>
<h3 id="方法">方法</h3>
<p>python+《上证50ETF波动率指数编制方案》</p>
<h3 id="结论">结论</h3>
<p>复现的波动率指数和中国波指相似度高达98.3%，达到实践可用水平,如图。<br>
<img src="https://nkuguanrui.github.io/post-images/1611409293578.png" alt="" loading="lazy"></p>
<h1 id="数据和代码">数据和代码</h1>
<p>数据和代码详见项目主页<a href="https://github.com/nkuguanrui/ivx">中国波指python编制</a>,网址：<a href="https://github.com/nkuguanrui/ivx">https://github.com/nkuguanrui/ivx</a>。<br>
<strong>未经授权不得转载或转载请注明出处</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[文献复现]Fama-French(1992)]]></title>
        <id>https://nkuguanrui.github.io/post/xue-zhu-wen-xian-fu-xian-fama-french(1992)/</id>
        <link href="https://nkuguanrui.github.io/post/xue-zhu-wen-xian-fu-xian-fama-french(1992)/">
        </link>
        <updated>2020-06-23T12:45:51.000Z</updated>
        <content type="html"><![CDATA[<h1 id="项目目的">项目目的</h1>
<p>本项目利用美国股票月度历史数据，利用python严格按照FamaFrench(1992)中的方法构造三因子（市场因子，HML因子，SMB因子），并且按照论文中所用的方法对模型进行时间序列回归检验。在文章写作过程中，本文会把重要的细节的附上原文。详见项目<a href="https://github.com/nkuguanrui/FamaFrenchThreeFacorModel">FamaFrench3Factors</a>，项目地址为：<a href="https://github.com/nkuguanrui/FamaFrenchThreeFacorModel">https://github.com/nkuguanrui/FamaFrenchThreeFacorModel</a></p>
<h1 id="三因子构建">三因子构建</h1>
<h2 id="数据来源">数据来源</h2>
<ul>
<li>wrds数据库</li>
<li>CRSP</li>
<li>COMPUSTAT</li>
</ul>
<h2 id="数据处理">数据处理</h2>
<ul>
<li>删除金融公司(We exclude financial firms because the high leverage that is normal for these firms probably does not have the same meaning as for nonfinancial firms, where high leverage more likely indicates distress.)</li>
<li>为了确保财报发布，将t-1年的财务信息与t年7月到t+1年6月的收益率进行匹配,也就是说，将上市公司年报发布时间统一设定在下一年的6月。(To ensure that the accounting variables are known before the returns they are used to explain, we match the accounting data for all fiscal yearends in calendar year t - 1 (1962-1989) with the returns for July of year t to June of t + 1.)</li>
</ul>
<h2 id="因子构建">因子构建</h2>
<ol>
<li>t年的6月，以纽交所股票截面数据，计算市值的50%分位点和BM(book-to-markert ratio)的30%和70%分位点。
<ul>
<li>计算BM分位点史去掉BM小于0的股票(We do not use negative-BE firms, when calculating the breakpoints for BM or when forming the size-BM portfolios.)</li>
<li>市值(size)选择t年6月的数据;BM是用t-1年财年末的账面价值除以t-1年末的市值</li>
</ul>
</li>
<li>对纽交所，纳斯达克，美交所股票做2x3独立双重排序(independent double sorting),分成6组，计算每组t年7月到t+1年6月的月度市值加权收益率。t+1年6月重新构造2x3组合。</li>
<li>构建HML和SMB因子:
<ul>
<li>$SMB = (SH+SM+SL)/3 - (BH+BM+BL)/3 $</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>M</mi><mi>L</mi><mo>=</mo><mo>(</mo><mi>S</mi><mi>H</mi><mo>+</mo><mi>B</mi><mi>H</mi><mo>)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><mo>(</mo><mi>S</mi><mi>L</mi><mo>+</mo><mi>B</mi><mi>L</mi><mo>)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">HML= (SH+BH)/2 - (SL+BL)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">L</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span></li>
</ul>
</li>
<li>市场因子：RM-RF
<ul>
<li>RM：全部股票月度市值加权收益率</li>
<li>RF：一个月国债收益率</li>
</ul>
</li>
</ol>
<h2 id="因子检验">因子检验</h2>
<p>FamaFrench(1992)利用时间序列回归，估计定价误差，对三因子模型进行检验。</p>
<ol>
<li>构造25个投资组合，构造方法和因子构建中的方法一致，唯一的差别是做5x5独立双重排序。</li>
<li>计算25个组合的月度加权收益率，计算超额收益</li>
<li>以25个组合的超额收益为因变量，以三因子为自变量，进行时间序列回归，股票定价误差和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span></li>
<li>对定价误差进行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>检验，如果定价误差不显著不等于0，则多因子模型有效</li>
<li>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>进行检验，发现<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>显著不等于0，说明因子对25个投资组合的超额收益率有显著的解释能力。</li>
</ol>
<h2 id="数据和代码">数据和代码</h2>
<p>详见项目<a href="https://github.com/nkuguanrui/FamaFrenchThreeFacorModel">FamaFrench3Factors</a>，项目地址为：<a href="https://github.com/nkuguanrui/FamaFrenchThreeFacorModel">https://github.com/nkuguanrui/FamaFrenchThreeFacorModel</a></p>
]]></content>
    </entry>
</feed>